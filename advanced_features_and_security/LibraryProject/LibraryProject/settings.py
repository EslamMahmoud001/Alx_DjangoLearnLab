"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zxx%@6z0g^-u)c0vj4_z%=n_14=kr4+b$ob00$2y5v_z99vxg)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Enable the XSS filter in modern browsers  UPDATED:
SECURE_BROWSER_XSS_FILTER = True

# Prevent the site from being embedded in an iframe (clickjacking prevention)  UPDATED:
X_FRAME_OPTIONS = 'DENY'

# Disable sniffing of content types by browsers to reduce risk of drive-by downloads  UPDATED:
SECURE_CONTENT_TYPE_NOSNIFF = True

#Ensure that cookies are only transmitted over secure HTTPS connections by setting the following:   UPDATED:
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Redirect HTTP to HTTPS   UPDATED:
SECURE_SSL_REDIRECT = True

# Set HTTP Strict Transport Security (HSTS) for 1 year   UPDATED:
SECURE_HSTS_SECONDS = 31536000  # 1 year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS policy to all subdomains
SECURE_HSTS_PRELOAD = True  # Allow browsers to preload HSTS policy

# Prevent CSRF cookie from being accessed via JavaScript   UPDATED:
CSRF_COOKIE_HTTPONLY = True

# Prevent framing of the site (clickjacking protection)   UPDATED:
X_FRAME_OPTIONS = 'DENY'

# Prevent browsers from MIME-sniffing a response away from the declared content-type   UPDATED:
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enable the browser's built-in XSS filter   UPDATED:
SECURE_BROWSER_XSS_FILTER = True

ALLOWED_HOSTS = []

#Email Configurations    UPDATED:
        # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
        # EMAIL_HOST = 'smtp.example.com'
        # EMAIL_PORT = 587
        # EMAIL_USE_TLS = True
        # EMAIL_HOST_USER = 'your_email@example.com'
        # EMAIL_HOST_PASSWORD = 'your_email_password'
        # DEFAULT_FROM_EMAIL = 'webmaster@example.com'

# Login and logout redirects to where    UPDATED:
LOGIN_REDIRECT_URL = "/accounts/profile"
LOGOUT_REDIRECT_URL = "/accounts/profile"

# point to the custom user model    UPDATED:
AUTH_USER_MODEL = 'bookshelf.CustomUser'

#This informs Django about the available authentication methods    UPDATED:
AUTHENTICATION_BACKENDS = [
    'bookshelf.auth_backends.EmailBackend',  # Adjust the path based on where you saved it
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]

# Configure CSP in settings.py
# You can set a strict Content Security Policy to reduce the risk of inline JavaScript execution.      UPDATED:


CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'")
CSP_IMG_SRC = ("'self'",)
CSP_FONT_SRC = ("'self'",)
CSP_CONNECT_SRC = ("'self'",)
CSP_FRAME_ANCESTORS = ("'none'",)
CSP_REPORT_URI = '/csp-violation-report-endpoint/'  # Optional: For reporting CSP violations


# Application definition

INSTALLED_APPS = [
    'bookshelf.apps.BookshelfConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'relationship_app.apps.RelationshipAppConfig', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware', #pip install django-csp     UPDATED:
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],                   # This is updated to located the template folder in the project directory    UPDATED
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {'NAME':'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
